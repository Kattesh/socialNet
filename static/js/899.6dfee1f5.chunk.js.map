{"version":3,"file":"static/js/899.6dfee1f5.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\nimport s from './ProfileInfo.module.css';\nimport {ThunkType} from \"../../../redux/redux-store\";\n\ntype ProfileStatusType = {\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst ProfileStatus = (props: ProfileStatusType) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value)\n    }\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{status || \"----\"}</span>\n                </div>}\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus","import React from \"react\";\nimport s from './ProfileInfo.module.css';\nimport {Preloader} from \"../../common/Preloader/Preloader\";\nimport {ProfilePropsType} from \"../Profile\";\nimport profile from \"../../../assets/images/profile.jpg\";\nimport ProfileStatus from \"./ProfileStatus\";\n\n\nconst ProfileInfo = (props: ProfilePropsType) => {\n    if (!props.profile){\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <div>{props.profile.fullName}</div>\n                <img src={props.profile.photos.large} alt={'photo'}/>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"posts\":\"MyPosts_posts__GSiZ2\",\"button\":\"MyPosts_button__TKXtI\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\";\nimport s from './Post.module.css';\nimport avatar from '../../../../assets/images/avatar.jpg'\nimport {PostType} from \"../../../../redux/profile-reducer\";\n\n\nconst Post:React.FC<PostType> = (props:PostType) => {\n    return (\n        <div className={s.item}>\n            <img src={avatar}\n                 alt=\"avatar\"/>\n            {props.message}\n            <div>\n                <span>likes </span>\n                {props.likesCount}\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\"\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\"\nimport {Field, Form} from \"react-final-form\"\nimport {composeValidators, maxLengthCreator, required} from \"../../../utils/validators/validators\"\nimport {Textarea} from \"../../common/FormControls/FormsControl\"\n\ntype PostType = {\n    id: number\n    message: string\n    likesCount: number\n}\ntype PropsType = addPostType & {\n    newPostText: string\n    posts: PostType[]\n}\ntype addPostType = {\n    addPost: (newPostText: string) => void\n}\n\nconst MyPosts = React.memo((props: PropsType) => {\n    let postsElements =\n        props.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>)\n\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostForm addPost={props.addPost}/>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n})\n\nconst AddNewPostForm = (props: addPostType) => {\n    let addPost = (values: { newPostText: string }) => {\n        props.addPost(values.newPostText)\n    }\n    return (\n        <Form\n            onSubmit={addPost}>\n            {({handleSubmit, pristine, form, submitting}) => (\n                <form onSubmit={handleSubmit}>\n                    <div>\n                        <Field name=\"newPostText\" validate={composeValidators(required, maxLengthCreator(20))}\n                               component={Textarea} placeholder=\"Post message \"/>\n                    </div>\n                    <div>\n                        <button type=\"submit\"\n                                disabled={submitting}\n                            // onClick={form.reset}\n                                className={s.button}>Add post\n                        </button>\n                    </div>\n                </form>\n            )}\n        </Form>\n    )\n}\nexport default MyPosts;","import React from \"react\";\nimport {addPostAC, PostType} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {ActionsTypes, StateType} from \"../../../redux/redux-store\";\n\ntype MapStatePropsType={\n    posts: PostType[]\n    newPostText: string\n}\ntype MapDispatchPropsType = {\n    addPost:(newPostText: string)=>void\n}\nlet mapStateToProps = (state:StateType): MapStatePropsType  => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText:state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch:(action: ActionsTypes) => void): MapDispatchPropsType => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostAC(newPostText))\n        }\n    }\n}\n\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport { MyPostsContainer } from \"./MyPosts/MyPostsContainer\";\nimport {ProfileType} from \"../../redux/profile-reducer\";\n\n\n\nexport type ProfilePropsType = {\n    profile: ProfileType\n    status: string\n    updateStatus:(status:string)=>void\n}\n\nconst Profile = (props: ProfilePropsType) => {\n    return (\n        <div>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {StateType, ThunkType} from \"../../redux/redux-store\";\nimport {getStatus, getUserProfileTC, ProfileType, updateStatus} from \"../../redux/profile-reducer\";\nimport {Location, NavigateFunction, Params, useLocation, useNavigate, useParams} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype MapStatePropsType = {\n    profile: ProfileType | null\n    status: string\n    authorizedUserId: number | null,\n    isAuth: boolean\n}\ntype MapDispatchPropsType = {\n    // setUserProfileAC: (profile: ProfileType) => void\n    getUserProfileTC(userId: number): ThunkType\n    getStatus: (userId: number) => void\n    updateStatus: (status: string) => void\n}\ntype WithRouterType = Location & NavigateFunction & Readonly<Params>\n\nclass ProfileContainer extends React.Component<MapStatePropsType & MapDispatchPropsType & { router: any }, any> {\n    componentDidMount() {\n        // const url = window.location.href;\n        // const userId = url.split('/').splice(-1)[0];\n        // console.log(this.props.router.params.id)\n        let id = this.props.router.params.id\n        if (!id) {\n            id = this.props.authorizedUserId\n            // if(!id){\n            //     this.props.history.push('/login')\n            // }\n        }\n        this.props.getUserProfileTC(id)\n        this.props.getStatus(id)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile!}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state: StateType): MapStatePropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nfunction withRouter<T>(Container: React.FC<T>) {\n    function ComponentWithRouterProp(props: T & WithRouterType) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Container\n                {...props}\n                router={{location, navigate, params}}\n            />\n        );\n    }\n\n    return ComponentWithRouterProp\n}\n\nexport default compose<React.ComponentType>(\n    connect(mapStateToProps, {getUserProfileTC, getStatus, updateStatus}),\n    withRouter,\n    // withAuthRedirect\n)(ProfileContainer)\n\n\n\n\n\n\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","fullName","src","photos","large","alt","Preloader","avatar","message","likesCount","MyPosts","React","postsElements","posts","map","p","id","AddNewPostForm","addPost","onSubmit","values","newPostText","handleSubmit","submitting","pristine","form","name","validate","composeValidators","required","maxLengthCreator","component","Textarea","placeholder","type","disabled","MyPostsContainer","connect","state","profilePage","dispatch","addPostAC","ProfileContainer","this","router","params","authorizedUserId","getUserProfileTC","getStatus","compose","auth","userId","isAuth","Container","location","useLocation","navigate","useNavigate","useParams"],"sourceRoot":""}